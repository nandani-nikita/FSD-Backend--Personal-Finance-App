// Prisma schema file

// Datasource block for PostgreSQL
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Generator block for Prisma Client
generator client {
  provider = "prisma-client-js"
}

// Users table
model User {
  id            Int       @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String   @unique
  passwordHash  String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  expenses      Expense[]
  incomes       Income[]
  budgets       Budget[]
  savingsGoals  SavingsGoal[]
}

// Categories table
model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  budgets   Budget[]
}

// Expenses table
model Expense {
  id          Int       @id @default(autoincrement())
  userId      Int
  amount      Float
  description String?
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

// Incomes table
model Income {
  id          Int       @id @default(autoincrement())
  userId      Int
  amount      Float
  description String?
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

// Budgets table
model Budget {
  id          Int       @id @default(autoincrement())
  userId      Int
  categoryId  Int
  amount      Float
  period      String
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])
}

// SavingsGoals table
model SavingsGoal {
  id            Int       @id @default(autoincrement())
  userId        Int
  name          String
  targetAmount  Float
  currentAmount Float
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  contributions SavingsContribution[]
}

// SavingsContributions table
model SavingsContribution {
  id            Int       @id @default(autoincrement())
  savingsGoalId Int
  amount        Float
  date          DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  savingsGoal   SavingsGoal @relation(fields: [savingsGoalId], references: [id])
}

